{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///Users/alok/Projects/audio-guide/Backend/audioguide-app/src/app/api/image/generate/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport axios from 'axios'\n\nconst BASE_URL = \"https://api.venice.ai/api/v1\"\n\nexport async function POST(request: Request) {\n  try {\n    const { title } = await request.json()\n    \n    // Log to verify API key\n    console.log('Using Venice API Key:', process.env.VENICE_API_KEY?.slice(0, 10) + '...')\n    \n    const response = await axios.post(\n      `${BASE_URL}/image/generate`,\n      {\n        prompt: `Create a minimalist digital art cover image for \"${title}\"`,\n        model: \"sdxl-1.0\",\n        n: 1,\n        size: \"1024x512\",\n        style: \"digital-art\"\n      },\n      {\n        headers: {\n          'Authorization': `Bearer ${process.env.VENICE_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    )\n\n    if (response.data.images && response.data.images.length > 0) {\n      return NextResponse.json({ imageUrl: response.data.images[0] })\n    }\n\n    throw new Error('No image generated')\n\n  } catch (error) {\n    console.error('Failed to generate image:', error)\n    if (axios.isAxiosError(error)) {\n      console.error('Status:', error.response?.status)\n      console.error('Response:', error.response?.data)\n    }\n    return NextResponse.json(\n      { error: 'Failed to generate image' }, \n      { status: 500 }\n    )\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,WAAW;AAEV,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEpC,wBAAwB;QACxB,QAAQ,GAAG,CAAC,yBAAyB,QAAQ,GAAG,CAAC,cAAc,EAAE,MAAM,GAAG,MAAM;QAEhF,MAAM,WAAW,MAAM,uIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,GAAG,SAAS,eAAe,CAAC,EAC5B;YACE,QAAQ,CAAC,iDAAiD,EAAE,MAAM,CAAC,CAAC;YACpE,OAAO;YACP,GAAG;YACH,MAAM;YACN,OAAO;QACT,GACA;YACE,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,QAAQ,GAAG,CAAC,cAAc,EAAE;gBACvD,gBAAgB;YAClB;QACF;QAGF,IAAI,SAAS,IAAI,CAAC,MAAM,IAAI,SAAS,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG;YAC3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,UAAU,SAAS,IAAI,CAAC,MAAM,CAAC,EAAE;YAAC;QAC/D;QAEA,MAAM,IAAI,MAAM;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,IAAI,uIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,QAAQ;YAC7B,QAAQ,KAAK,CAAC,WAAW,MAAM,QAAQ,EAAE;YACzC,QAAQ,KAAK,CAAC,aAAa,MAAM,QAAQ,EAAE;QAC7C;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}