{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/alok/Projects/audio-guide/Backend/audioguide-app/src/app/api/image/generate/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport OpenAI from 'openai'\n\nconst venice = new OpenAI({\n  apiKey: process.env.VENICE_API_KEY || '',\n  baseURL: \"https://api.venice.ai/api/v1\"\n})\n\nexport async function POST(request: Request) {\n  try {\n    console.log('Using Venice API Key:', process.env.VENICE_API_KEY?.slice(0, 10) + '...')\n    \n    // Use createImage instead of images.generate\n    const response = await venice.post('/image/generate', {\n      prompt: \"The British Museum in digital art style\",\n      model: \"sdxl\",\n      n: 1,\n      size: \"1024x512\"\n    })\n\n    console.log('Venice response:', response)\n\n    if (response.data && response.data.images && response.data.images.length > 0) {\n      return NextResponse.json({ imageUrl: response.data.images[0] })\n    }\n\n    throw new Error('No image generated')\n\n  } catch (error) {\n    console.error('Failed to generate image:', error)\n    if (error instanceof OpenAI.APIError) {\n      console.error('Status:', error.status)\n      console.error('Message:', error.message)\n      console.error('Full error:', error)\n    }\n    return NextResponse.json(\n      { error: 'Failed to generate image' }, \n      { status: 500 }\n    )\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,kJAAA,CAAA,UAAM,CAAC;IACxB,QAAQ,QAAQ,GAAG,CAAC,cAAc,IAAI;IACtC,SAAS;AACX;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,QAAQ,GAAG,CAAC,yBAAyB,QAAQ,GAAG,CAAC,cAAc,EAAE,MAAM,GAAG,MAAM;QAEhF,6CAA6C;QAC7C,MAAM,WAAW,MAAM,OAAO,IAAI,CAAC,mBAAmB;YACpD,QAAQ;YACR,OAAO;YACP,GAAG;YACH,MAAM;QACR;QAEA,QAAQ,GAAG,CAAC,oBAAoB;QAEhC,IAAI,SAAS,IAAI,IAAI,SAAS,IAAI,CAAC,MAAM,IAAI,SAAS,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG;YAC5E,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,UAAU,SAAS,IAAI,CAAC,MAAM,CAAC,EAAE;YAAC;QAC/D;QAEA,MAAM,IAAI,MAAM;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,IAAI,iBAAiB,kJAAA,CAAA,UAAM,CAAC,QAAQ,EAAE;YACpC,QAAQ,KAAK,CAAC,WAAW,MAAM,MAAM;YACrC,QAAQ,KAAK,CAAC,YAAY,MAAM,OAAO;YACvC,QAAQ,KAAK,CAAC,eAAe;QAC/B;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}