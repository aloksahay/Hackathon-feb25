{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/alok/Projects/audio-guide/Backend/audioguide-app/src/app/api/upload/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { Agent } from '@fileverse/agents'\n\n// Initialize the Fileverse agent\nconst agent = new Agent({ \n  chain: process.env.NEXT_PUBLIC_CHAIN || 'gnosis',\n  privateKey: process.env.PRIVATE_KEY,\n  pinataJWT: process.env.PINATA_JWT,\n  pinataGateway: process.env.PINATA_GATEWAY,\n  pimlicoAPIKey: process.env.PIMLICO_API_KEY,\n})\n\nexport async function POST(request: Request) {\n  try {\n    const { content, action, fileId } = await request.json()\n\n    // Setup storage if not already set up\n    await agent.setupStorage('audio-guides')\n\n    if (action === 'delete' && fileId) {\n      const result = await agent.delete(BigInt(fileId))\n      return NextResponse.json({ success: true, result })\n    }\n\n    // Create file using Fileverse agent\n    const file = await agent.create(content)\n    console.log('File created:', file)\n\n    // Get the file content after creation\n    const fileContent = await agent.getFile(file.fileId)\n    console.log('File content:', fileContent)\n\n    return NextResponse.json({ \n      hash: file.hash,\n      fileId: file.fileId.toString(),\n      content: fileContent?.content || content,\n      portalAddress: file.portalAddress\n    })\n  } catch (error) {\n    console.error('Failed to upload using Fileverse:', error)\n    return NextResponse.json(\n      { error: 'Failed to upload content' },\n      { status: 500 }\n    )\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,iCAAiC;AACjC,MAAM,QAAQ,IAAI,gJAAA,CAAA,QAAK,CAAC;IACtB,OAAO,+CAAiC;IACxC,YAAY,QAAQ,GAAG,CAAC,WAAW;IACnC,WAAW,QAAQ,GAAG,CAAC,UAAU;IACjC,eAAe,QAAQ,GAAG,CAAC,cAAc;IACzC,eAAe,QAAQ,GAAG,CAAC,eAAe;AAC5C;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEtD,sCAAsC;QACtC,MAAM,MAAM,YAAY,CAAC;QAEzB,IAAI,WAAW,YAAY,QAAQ;YACjC,MAAM,SAAS,MAAM,MAAM,MAAM,CAAC,OAAO;YACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAM;YAAO;QACnD;QAEA,oCAAoC;QACpC,MAAM,OAAO,MAAM,MAAM,MAAM,CAAC;QAChC,QAAQ,GAAG,CAAC,iBAAiB;QAE7B,sCAAsC;QACtC,MAAM,cAAc,MAAM,MAAM,OAAO,CAAC,KAAK,MAAM;QACnD,QAAQ,GAAG,CAAC,iBAAiB;QAE7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,MAAM,KAAK,IAAI;YACf,QAAQ,KAAK,MAAM,CAAC,QAAQ;YAC5B,SAAS,aAAa,WAAW;YACjC,eAAe,KAAK,aAAa;QACnC;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}